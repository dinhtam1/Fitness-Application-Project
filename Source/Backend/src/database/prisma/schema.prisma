// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId        Int        @id @default(autoincrement()) @db.UnsignedInt
  full_name     String     @db.VarChar(100)
  phone_number  String     @db.Char(10)
  email         String     @unique @db.VarChar(100)
  password      String     @db.Char(128)
  age           Int?
  gender        Gender?
  weight        Float?
  goal_weight   Float?
  height        Float?
  level         Level?
  goal          Goal?
  create_at     DateTime   @default(now())
  role          Role       @default(USER)
  OTP           String?    @db.Char(4)
  otp_expiry_at DateTime?
  is_verified   Boolean    @default(false)
  keyStore      KeyStore[]
}

enum Gender {
  male
  female
}

enum Role {
  USER
  ADMIN
}

enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum Goal {
  WEIGHT_LOSS
  GAIN_MUSCLE
  IMPROVE_FITNESS
}

model KeyStore {
  keyStoreId   Int      @id @default(autoincrement())
  userId       Int      @unique @db.UnsignedInt
  publicKey    String   @db.Text
  privateKey   String   @db.Text
  refreshToken String   @db.Text
  create_at    DateTime @default(now())
  user         User     @relation(fields: [userId], references: [userId])
}

model muscle_groups {
  id          Int        @id @default(autoincrement()) @db.UnsignedInt
  musclesId   Int        @unique
  musclesName String     @db.VarChar(100)
  create_at   DateTime   @default(now())
  level       Int
  exercises   Exercise[]
}

model equipment {
  id            Int        @id @default(autoincrement()) @db.UnsignedInt
  equipmentId   Int        @unique
  equipmentName String     @db.VarChar(100)
  image         String     @db.Text
  create_at     DateTime   @default(now())
  exercises     Exercise[]
}

model Exercise {
  exerciseId    Int           @id @default(autoincrement()) @db.UnsignedInt
  musclesId     Int
  musclesName   String        @db.VarChar(100)
  equipmentId   Int
  gender        Gender
  ordering      String
  equipmentName String
  image         String        @db.Text
  video_center  String        @db.Text
  video_side    String        @db.Text
  create_at     DateTime      @default(now())
  muscle_group  muscle_groups @relation(fields: [musclesId], references: [musclesId])
  equipment     equipment     @relation(fields: [equipmentId], references: [equipmentId])
}
